name: "trigger_manager"
description: "Менеджер триггеров: обрабатывает ивенты, ищет триггер, разворачивает сценарий и кладёт действия в очередь."

dependencies:
  utilities:
    - "logger"
    - "scenarios_manager"
    - "database_service"
    - "button_mapper"
    - "trigger_processing"
    - "permission_manager"
    - "datetime_formatter"
    - "bot_initializer"
interface:
  methods:
    handle_event:
      description: "Обработка входящего ивента (вызывается из bot_app)."
      input:
        event:
          type: dict
          description: "Ивент из Telegram или другого источника (dict c user_id, chat_id, message_id, callback_data и т.д.)"
      output:
        type: void
        description: "Нет возвращаемого значения"
actions:
  any:
    description: "Универсальные настройки для всех действий сценариев: управление цепочками действий, ограничения доступа, роли и разрешения."
    config_attrs:
      chain:
        type: [boolean, string, array]
        description: |
          Управляет зависимостью выполнения действия от статуса предыдущего действия в цепочке (подробнее см. в сценариях). 
      chain_drop:
        type: [string, array]
        description: |
          Статусы, при которых цепочка действий прерывается.
          Можно указать строку ("failed") или массив статусов (["failed", "error"]).
          Если текущий статус действия входит в этот список - вся цепочка прерывается.
          По умолчанию null (цепочка не прерывается).
      group_admin:
        type: boolean
        description: |
          Если true — действие будет выполнено только если пользователь, вызвавший действие, является администратором группы (chat_id).
          По умолчанию false. Используется для ограничения доступа к действиям только для админов групповых чатов.
          При отсутствии прав доступа действие переводится в статус "failed".
      required_role:
        type: [string, array]
        description: |
          Требуемая роль пользователя для выполнения действия. Можно указать строку ("admin") или массив ролей (["admin", "moderator"]).
          Достаточно наличия хотя бы одной роли из списка.
          Если не указано — доступ открыт для всех.
          При отсутствии требуемых ролей действие переводится в статус "failed".
      required_permission:
        type: [string, array]
        description: |
          Требуемые разрешения пользователя для выполнения действия. Можно указать строку ("manage_users") или массив разрешений (["manage_users", "edit_messages"]).
          Пользователь должен иметь все указанные разрешения.
          Если не указано — доступ открыт для всех.
          При отсутствии требуемых разрешений действие переводится в статус "failed".
    details: |
      Эти параметры применяются ко всем действиям сценариев и позволяют:
      - Управлять зависимостями между действиями в цепочке
      - Ограничивать доступ по ролям и разрешениям
      - Контролировать выполнение только для администраторов групп
      - Прерывать цепочку действий при определенных статусах
features:
  - "Поиск триггера по ивенту через triggers.yaml"
  - "Разворачивание сценария через scenarios_manager"
  - "Запись всех действий сценария в очередь БД (actions)"
  - "Логирование нераспознанных триггеров как warning"
  - "Специальная секция actions для описания атрибутов всех действий сценариев"